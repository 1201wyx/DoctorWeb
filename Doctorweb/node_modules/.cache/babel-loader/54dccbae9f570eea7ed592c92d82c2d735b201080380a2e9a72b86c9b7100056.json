{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode, createTextVNode as _createTextVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"community-forum\"\n};\nconst _hoisted_2 = {\n  class: \"posts\"\n};\nconst _hoisted_3 = {\n  class: \"post-header\"\n};\nconst _hoisted_4 = {\n  class: \"time\"\n};\nconst _hoisted_5 = {\n  class: \"post-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h1\", {\n    class: \"mb-4\"\n  }, \"社区交流\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.posts, post => {\n    return _openBlock(), _createBlock(_component_el_card, {\n      key: post.id,\n      class: \"mb-4\"\n    }, {\n      header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"span\", null, _toDisplayString(post.author), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_4, _toDisplayString(post.timestamp), 1 /* TEXT */)])]),\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_5, _toDisplayString(post.content), 1 /* TEXT */)]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createVNode(_component_el_form, {\n    model: $setup.newPost,\n    onSubmit: _withModifiers($setup.handlePostSubmit, [\"prevent\"])\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.newPost.content,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.newPost.content = $event),\n        type: \"textarea\",\n        rows: 3,\n        placeholder: \"分享你的想法...\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        \"native-type\": \"submit\"\n      }, {\n        default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"发布\")])),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$setup","posts","post","_createBlock","_component_el_card","key","id","header","_withCtx","_hoisted_3","_toDisplayString","author","_hoisted_4","timestamp","default","_hoisted_5","content","_","_createVNode","_component_el_form","model","newPost","onSubmit","_withModifiers","handlePostSubmit","_component_el_form_item","_component_el_input","modelValue","_cache","$event","type","rows","placeholder","_component_el_button","_createTextVNode"],"sources":["C:\\Users\\Lenovo\\Desktop\\DoctorWeb\\project\\src\\components\\CommunityForum.vue"],"sourcesContent":["<template>\n  <div class=\"community-forum\">\n    <h1 class=\"mb-4\">社区交流</h1>\n    <div class=\"posts\">\n      <el-card v-for=\"post in posts\" :key=\"post.id\" class=\"mb-4\">\n        <template #header>\n          <div class=\"post-header\">\n            <span>{{ post.author }}</span>\n            <span class=\"time\">{{ post.timestamp }}</span>\n          </div>\n        </template>\n        <div class=\"post-content\">\n          {{ post.content }}\n        </div>\n      </el-card>\n    </div>\n    <el-form :model=\"newPost\" @submit.prevent=\"handlePostSubmit\">\n      <el-form-item>\n        <el-input\n          v-model=\"newPost.content\"\n          type=\"textarea\"\n          :rows=\"3\"\n          placeholder=\"分享你的想法...\"\n        />\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" native-type=\"submit\">发布</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { ElMessage } from 'element-plus'\n\nconst posts = ref([])\nconst newPost = ref({\n  content: '',\n})\n\nonMounted(() => {\n  // 模拟从API获取帖子\n  posts.value = [\n    { id: 1, author: '张医生', content: '大家好，我是新来的儿科医生。', timestamp: '2023-05-01 10:00' },\n    { id: 2, author: '李医生', content: '欢迎欢迎！我们一起为儿童健康努力。', timestamp: '2023-05-01 10:05' },\n  ]\n})\n\nconst handlePostSubmit = () => {\n  if (newPost.value.content.trim()) {\n    const post = {\n      id: posts.value.length + 1,\n      author: '当前医生', // 这里应该使用实际的登录用户名\n      content: newPost.value.content,\n      timestamp: new Date().toLocaleString(),\n    }\n    posts.value.unshift(post)\n    newPost.value.content = ''\n    ElMessage({\n      message: '帖子已发布',\n      type: 'success',\n    })\n    // 这里添加发送帖子到后端的逻辑\n  }\n}\n</script>\n\n<style scoped>\n.community-forum {\n  max-width: 800px;\n  margin: 0 auto;\n}\n.post-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n.time {\n  font-size: 0.8em;\n  color: #999;\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;EAErBA,KAAK,EAAC;AAAO;;EAGPA,KAAK,EAAC;AAAa;;EAEhBA,KAAK,EAAC;AAAM;;EAGjBA,KAAK,EAAC;AAAc;;;;;;;uBAV/BC,mBAAA,CA4BM,OA5BNC,UA4BM,G,0BA3BJC,mBAAA,CAA0B;IAAtBH,KAAK,EAAC;EAAM,GAAC,MAAI,sBACrBG,mBAAA,CAYM,OAZNC,UAYM,I,kBAXJH,mBAAA,CAUUI,SAAA,QAdhBC,WAAA,CAI8BC,MAAA,CAAAC,KAAK,EAAbC,IAAI;yBAApBC,YAAA,CAUUC,kBAAA;MAVsBC,GAAG,EAAEH,IAAI,CAACI,EAAE;MAAEb,KAAK,EAAC;;MACvCc,MAAM,EAAAC,QAAA,CACf,MAGM,CAHNZ,mBAAA,CAGM,OAHNa,UAGM,GAFJb,mBAAA,CAA8B,cAAAc,gBAAA,CAArBR,IAAI,CAACS,MAAM,kBACpBf,mBAAA,CAA8C,QAA9CgB,UAA8C,EAAAF,gBAAA,CAAxBR,IAAI,CAACW,SAAS,iB;MARhDC,OAAA,EAAAN,QAAA,CAWQ,MAEM,CAFNZ,mBAAA,CAEM,OAFNmB,UAEM,EAAAL,gBAAA,CADDR,IAAI,CAACc,OAAO,iB;MAZzBC,CAAA;;oCAgBIC,YAAA,CAYUC,kBAAA;IAZAC,KAAK,EAAEpB,MAAA,CAAAqB,OAAO;IAAGC,QAAM,EAhBrCC,cAAA,CAgB+CvB,MAAA,CAAAwB,gBAAgB;;IAhB/DV,OAAA,EAAAN,QAAA,CAiBM,MAOe,CAPfU,YAAA,CAOeO,uBAAA;MAxBrBX,OAAA,EAAAN,QAAA,CAkBQ,MAKE,CALFU,YAAA,CAKEQ,mBAAA;QAvBVC,UAAA,EAmBmB3B,MAAA,CAAAqB,OAAO,CAACL,OAAO;QAnBlC,uBAAAY,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAmBmB7B,MAAA,CAAAqB,OAAO,CAACL,OAAO,GAAAa,MAAA;QACxBC,IAAI,EAAC,UAAU;QACdC,IAAI,EAAE,CAAC;QACRC,WAAW,EAAC;;MAtBtBf,CAAA;QAyBMC,YAAA,CAEeO,uBAAA;MA3BrBX,OAAA,EAAAN,QAAA,CA0BQ,MAA6D,CAA7DU,YAAA,CAA6De,oBAAA;QAAlDH,IAAI,EAAC,SAAS;QAAC,aAAW,EAAC;;QA1B9ChB,OAAA,EAAAN,QAAA,CA0BuD,MAAEoB,MAAA,QAAAA,MAAA,OA1BzDM,gBAAA,CA0BuD,IAAE,E;QA1BzDjB,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}