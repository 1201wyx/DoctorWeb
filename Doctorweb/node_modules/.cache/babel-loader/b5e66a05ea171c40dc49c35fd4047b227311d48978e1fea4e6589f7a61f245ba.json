{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { ElMessage } from 'element-plus';\nexport default {\n  __name: 'CommunityForum',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const posts = ref([]);\n    const newPost = ref({\n      content: ''\n    });\n    onMounted(() => {\n      // 模拟从API获取帖子\n      posts.value = [{\n        id: 1,\n        author: '张医生',\n        content: '大家好，我是新来的儿科医生。',\n        timestamp: '2023-05-01 10:00'\n      }, {\n        id: 2,\n        author: '李医生',\n        content: '欢迎欢迎！我们一起为儿童健康努力。',\n        timestamp: '2023-05-01 10:05'\n      }];\n    });\n    const handlePostSubmit = () => {\n      if (newPost.value.content.trim()) {\n        const post = {\n          id: posts.value.length + 1,\n          author: '当前医生',\n          // 这里应该使用实际的登录用户名\n          content: newPost.value.content,\n          timestamp: new Date().toLocaleString()\n        };\n        posts.value.unshift(post);\n        newPost.value.content = '';\n        ElMessage({\n          message: '帖子已发布',\n          type: 'success'\n        });\n        // 这里添加发送帖子到后端的逻辑\n      }\n    };\n    const __returned__ = {\n      posts,\n      newPost,\n      handlePostSubmit,\n      ref,\n      onMounted,\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","ElMessage","posts","newPost","content","value","id","author","timestamp","handlePostSubmit","trim","post","length","Date","toLocaleString","unshift","message","type"],"sources":["C:/Users/Lenovo/Desktop/DoctorWeb/project/src/components/CommunityForum.vue"],"sourcesContent":["<template>\n  <div class=\"community-forum\">\n    <h1 class=\"mb-4\">社区交流</h1>\n    <div class=\"posts\">\n      <el-card v-for=\"post in posts\" :key=\"post.id\" class=\"mb-4\">\n        <template #header>\n          <div class=\"post-header\">\n            <span>{{ post.author }}</span>\n            <span class=\"time\">{{ post.timestamp }}</span>\n          </div>\n        </template>\n        <div class=\"post-content\">\n          {{ post.content }}\n        </div>\n      </el-card>\n    </div>\n    <el-form :model=\"newPost\" @submit.prevent=\"handlePostSubmit\">\n      <el-form-item>\n        <el-input\n          v-model=\"newPost.content\"\n          type=\"textarea\"\n          :rows=\"3\"\n          placeholder=\"分享你的想法...\"\n        />\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" native-type=\"submit\">发布</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { ElMessage } from 'element-plus'\n\nconst posts = ref([])\nconst newPost = ref({\n  content: '',\n})\n\nonMounted(() => {\n  // 模拟从API获取帖子\n  posts.value = [\n    { id: 1, author: '张医生', content: '大家好，我是新来的儿科医生。', timestamp: '2023-05-01 10:00' },\n    { id: 2, author: '李医生', content: '欢迎欢迎！我们一起为儿童健康努力。', timestamp: '2023-05-01 10:05' },\n  ]\n})\n\nconst handlePostSubmit = () => {\n  if (newPost.value.content.trim()) {\n    const post = {\n      id: posts.value.length + 1,\n      author: '当前医生', // 这里应该使用实际的登录用户名\n      content: newPost.value.content,\n      timestamp: new Date().toLocaleString(),\n    }\n    posts.value.unshift(post)\n    newPost.value.content = ''\n    ElMessage({\n      message: '帖子已发布',\n      type: 'success',\n    })\n    // 这里添加发送帖子到后端的逻辑\n  }\n}\n</script>\n\n<style scoped>\n.community-forum {\n  max-width: 800px;\n  margin: 0 auto;\n}\n.post-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n.time {\n  font-size: 0.8em;\n  color: #999;\n}\n</style>"],"mappings":"AAiCA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,SAAS,QAAQ,cAAc;;;;;;;IAExC,MAAMC,KAAK,GAAGH,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMI,OAAO,GAAGJ,GAAG,CAAC;MAClBK,OAAO,EAAE;IACX,CAAC,CAAC;IAEFJ,SAAS,CAAC,MAAM;MACd;MACAE,KAAK,CAACG,KAAK,GAAG,CACZ;QAAEC,EAAE,EAAE,CAAC;QAAEC,MAAM,EAAE,KAAK;QAAEH,OAAO,EAAE,gBAAgB;QAAEI,SAAS,EAAE;MAAmB,CAAC,EAClF;QAAEF,EAAE,EAAE,CAAC;QAAEC,MAAM,EAAE,KAAK;QAAEH,OAAO,EAAE,mBAAmB;QAAEI,SAAS,EAAE;MAAmB,CAAC,CACtF;IACH,CAAC,CAAC;IAEF,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;MAC7B,IAAIN,OAAO,CAACE,KAAK,CAACD,OAAO,CAACM,IAAI,CAAC,CAAC,EAAE;QAChC,MAAMC,IAAI,GAAG;UACXL,EAAE,EAAEJ,KAAK,CAACG,KAAK,CAACO,MAAM,GAAG,CAAC;UAC1BL,MAAM,EAAE,MAAM;UAAE;UAChBH,OAAO,EAAED,OAAO,CAACE,KAAK,CAACD,OAAO;UAC9BI,SAAS,EAAE,IAAIK,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC;QACvC,CAAC;QACDZ,KAAK,CAACG,KAAK,CAACU,OAAO,CAACJ,IAAI,CAAC;QACzBR,OAAO,CAACE,KAAK,CAACD,OAAO,GAAG,EAAE;QAC1BH,SAAS,CAAC;UACRe,OAAO,EAAE,OAAO;UAChBC,IAAI,EAAE;QACR,CAAC,CAAC;QACF;MACF;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}